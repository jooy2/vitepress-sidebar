import{_ as i,a}from"./chunks/doc-multi-level-docs-after.BybuXf3W.js";import{_ as e,c as n,o as t,ag as p}from"./chunks/framework.Bw-5EFTY.js";const y=JSON.parse('{"title":"다중 레벨 사이드바의 들여쓰기","description":"","frontmatter":{},"headers":[],"relativePath":"ko/advanced-usage/multi-level-sidebar-with-indents.md","filePath":"ko/advanced-usage/multi-level-sidebar-with-indents.md","lastUpdated":1753152482000}'),l={name:"ko/advanced-usage/multi-level-sidebar-with-indents.md"};function h(d,s,k,r,c,o){return t(),n("div",null,s[0]||(s[0]=[p('<h1 id="다중-레벨-사이드바의-들여쓰기" tabindex="-1">다중 레벨 사이드바의 들여쓰기 <a class="header-anchor" href="#다중-레벨-사이드바의-들여쓰기" aria-label="Permalink to &quot;다중 레벨 사이드바의 들여쓰기&quot;">​</a></h1><p>다중 사이드바에서는 메뉴가 각 계층마다 들여쓰기로 표시됩니다. 그러나 VitePress는 기본적으로 두 번째 계층부터 들여쓰기를 시작합니다. 예를 들어:</p><p><img src="'+i+`" alt="Multi level docs before"></p><p>위의 <code>directory-level-2</code>는 <code>directory-level-1</code>의 하위 파일이지만 같은 계층 구조에 있는 것으로 보입니다.</p><p>이 문제는 VitePress 사이드바의 문제가 아니므로 이 문제를 해결하려면 <strong><a href="https://vitepress.dev/ko/guide/extending-default-theme#customizing-css" target="_blank" rel="noreferrer">VitePress의 사용자 정의 CSS</a></strong> 기능을 사용하여 기존 테마의 스타일을 사용자 정의해야 합니다.</p><p><code>.vitepress</code> 디렉토리에 <code>theme</code> 디렉토리를 만들어 기존 스타일에 필요한 스타일을 재정의합니다. 그런 다음 <code>theme</code> 디렉토리 안에 <code>index.js</code> 파일(타입스크립트를 사용하는 경우 <code>index.js</code> 대신 <code>index.ts</code>를 사용)과 <code>custom.css</code> 파일을 만듭니다.</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/</span></span>
<span class="line"><span>├─ package.json</span></span>
<span class="line"><span>├─ src/</span></span>
<span class="line"><span>├─ docs/</span></span>
<span class="line"><span>│  ├─ .vitepress/</span></span>
<span class="line"><span>│  │  └─ theme/            &lt;------------ 이 줄 추가</span></span>
<span class="line"><span>│  │     ├─ custom.css     &lt;------------ 이 줄 추가</span></span>
<span class="line"><span>│  │     └─ index.js       &lt;------------ 이 줄 추가</span></span>
<span class="line"><span>│  ├─ example.md</span></span>
<span class="line"><span>│  └─ index.md</span></span>
<span class="line"><span>└─ ...</span></span></code></pre></div><p>그런 다음 <code>index.js</code> 파일에 다음을 추가합니다:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DefaultTheme </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitepress/theme&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./custom.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DefaultTheme;</span></span></code></pre></div><p>다음으로 <code>custom.css</code> 파일에 다음을 추가합니다:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.group:has</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">role</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;button&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.VPSidebarItem.level-0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> .items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !important</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--vp-c-divider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: background-color </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.25</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>이제 VitePress 서버를 시작합니다. 이렇게 하면 하위 콘텐츠가 존재하는 그룹의 첫 번째 레벨의 계층 구조를 더 쉽게 확인할 수 있습니다.</p><p><img src="`+a+'" alt="Multi level docs before"></p><p>여기에서 보이는 세로선은 CSS로만 생성된 것으로, <code>indicator</code>라는 CSS 클래스가 있는 <code>div</code>로 생성되어야 하므로 향후 동적 페이지를 작성할 때 세로선이 선택되지 않을 수 있다는 점에 유의해야 합니다.</p>',14)]))}const F=e(l,[["render",h]]);export{y as __pageData,F as default};

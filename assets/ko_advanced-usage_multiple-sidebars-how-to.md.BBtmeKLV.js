import{_ as a,c as i,o as n,ag as p}from"./chunks/framework.Bw-5EFTY.js";const c=JSON.parse('{"title":"다중 사이드바","description":"","frontmatter":{},"headers":[],"relativePath":"ko/advanced-usage/multiple-sidebars-how-to.md","filePath":"ko/advanced-usage/multiple-sidebars-how-to.md","lastUpdated":1753152719000}'),e={name:"ko/advanced-usage/multiple-sidebars-how-to.md"};function l(t,s,h,k,d,E){return n(),i("div",null,s[0]||(s[0]=[p(`<h1 id="다중-사이드바" tabindex="-1">다중 사이드바 <a class="header-anchor" href="#다중-사이드바" aria-label="Permalink to &quot;다중 사이드바&quot;">​</a></h1><p>다중 사이드바는 특정 URI 경로에 따라 서로 다른 사이드바 메뉴를 표시할 수 있는 기능입니다.</p><p>이것은 몇 가지 간단한 설정으로 <code>vitepress-sidebar</code>에서 쉽게 구현할 수 있습니다. 결국 <strong>VitePress</strong>는 의도한 대로 옵션을 출력합니다.</p><p>다중 사이드바에 대해 자세히 알아보려면 먼저 아래의 <strong>VitePress</strong> 공식 문서를 살펴보는 것이 좋습니다:</p><p><a href="https://vitepress.dev/ko/reference/default-theme-sidebar#multiple-sidebars" target="_blank" rel="noreferrer">https://vitepress.dev/ko/reference/default-theme-sidebar#multiple-sidebars</a></p><h2 id="기본-사용법" tabindex="-1">기본 사용법 <a class="header-anchor" href="#기본-사용법" aria-label="Permalink to &quot;기본 사용법&quot;">​</a></h2><p>먼저, 다음과 같이 <code>docs</code>라는 루트 프로젝트와 <code>guide</code> 및 <code>config</code>라는 하위 디렉터리가 있다고 가정해 보겠습니다:</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docs/</span></span>
<span class="line"><span>├─ guide/</span></span>
<span class="line"><span>│  ├─ index.md</span></span>
<span class="line"><span>│  ├─ one.md</span></span>
<span class="line"><span>│  ├─ two.md</span></span>
<span class="line"><span>│  └─ do-not-include.md</span></span>
<span class="line"><span>└─ config/</span></span>
<span class="line"><span>   ├─ index.md</span></span>
<span class="line"><span>   ├─ three.md</span></span>
<span class="line"><span>   └─ four.md</span></span></code></pre></div><p>URL이 <code>/guide</code> 페이지에 있는 경우 사용자는 메뉴에 <code>guide</code>의 하위 메뉴만 표시하고 <code>config</code>의 하위 메뉴는 숨기기를 원합니다. 마찬가지로 <code>/config</code> 페이지에 <code>guide</code>의 하위 메뉴가 있을 때 하위 메뉴를 숨기려고 합니다.</p><p>이를 <code>vitepress-sidebar</code>에서 구현하려면 기존 설정과 다르게 접근해야 합니다.</p><p>이전과 같이 <code>withSidebar</code> 함수를 사용하되 배열을 전달합니다. 배열에는 <code>vitepress-sidebar</code>의 옵션이 하나 이상 포함됩니다. 배열의 값은 원하는 만큼의 URL을 지정할 수 있습니다. 물론 다른 설정으로 구성할 수도 있습니다.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 배열 인수를 전달해야 함!!!!</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> vitePressConfigs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* ... */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  withSidebar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vitePressConfigs, [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      documentRootPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;docs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      scanStartPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;guide&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      basePath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/guide/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      resolvePath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/guide/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      useTitleFromFileHeading: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      documentRootPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;docs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      scanStartPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;config&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      resolvePath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/config/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      useTitleFromFrontmatter: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>이러한 옵션의 값은 다음과 같이 결과에 사용됩니다:</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &lt;resolvePath&gt;: [</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>      base: &lt;basePath or resolvePath&gt;,</span></span>
<span class="line"><span>      items: [...] // \`&lt;scanStartPath&gt;/path/to/items\`</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  ]</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>다음은 위 설정의 출력 예시입니다:</p><div class="language-json5 vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;/guide/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/guide/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;One&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;one&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Two&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;two&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;/config/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/config/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Three&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;three&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Four&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;four&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="다중-사이드바-설정" tabindex="-1">다중 사이드바 설정 <a class="header-anchor" href="#다중-사이드바-설정" aria-label="Permalink to &quot;다중 사이드바 설정&quot;">​</a></h2><p>다중 사이드바에서 사용할 수 있는 옵션은 다음과 같습니다: <code>scanStartPath</code>, <code>basePath</code> 및 <code>resolvePath</code>. 각 옵션은 선택 사항이지만 상황에 따라 올바르게 사용할 수 있어야 합니다.</p><p>각 옵션은 아래에 설명되어 있습니다. 그러나 먼저 <a href="/ko/guide/options">옵션</a> 페이지에서 각 옵션에 대한 설명을 참조하는 것이 좋습니다.</p><p>아래 설명은 다음 예시를 기반으로 합니다:</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docs/</span></span>
<span class="line"><span>├─ .vitepress/</span></span>
<span class="line"><span>├─ guide/</span></span>
<span class="line"><span>│  ├─ api/</span></span>
<span class="line"><span>│  │  ├─ api-one.md</span></span>
<span class="line"><span>│  │  └─ api-two.md</span></span>
<span class="line"><span>│  ├─ one.md</span></span>
<span class="line"><span>│  └─ two.md</span></span>
<span class="line"><span>└─ config/</span></span>
<span class="line"><span>   ├─ index.md</span></span>
<span class="line"><span>   ├─ three.md</span></span>
<span class="line"><span>   └─ four.md</span></span></code></pre></div><h3 id="scanstartpath" tabindex="-1"><code>scanStartPath</code> <a class="header-anchor" href="#scanstartpath" aria-label="Permalink to &quot;\`scanStartPath\`&quot;">​</a></h3><p>이 옵션은 다른 라우팅 규칙의 루트 경로로 다른 디렉터리를 지정하는 데 사용됩니다. <code>documenRootPath</code>는 실제로 스캔할 루트 경로(<code>.vitepress</code> 디렉터리가 있는 위치)이고 <code>scanStartPath</code>는 이 경로 규칙에서 실제로 표시되어야 하는 루트 경로입니다.</p><p>예를 들어 <code>/guide</code> 디렉터리에 있는 파일만 포함하려면 <code>scanStartPath</code>의 값을 <code>guide</code>로 지정합니다. 단, <code>documentRootPath</code>의 경로는 포함되지 않아야 합니다.</p><h3 id="resolvepath" tabindex="-1"><code>resolvePath</code> <a class="header-anchor" href="#resolvepath" aria-label="Permalink to &quot;\`resolvePath\`&quot;">​</a></h3><p>이 옵션은 특정 URI를 발견했을 때 관련 메뉴를 표시하기 위해 VitePress에서 사용합니다. 예를 들어 <code>example.com/guide/api</code>에 도달할 때 <code>guide/api</code> 디렉토리의 내용만 표시하려면 <code>resolvePath</code>의 값은 <code>/guide/api</code>가 됩니다. 경로 앞에 <code>/</code>를 포함하는 것이 좋습니다.</p><p>이 값은 일반적으로 <code>scanStartPath</code>와 비슷한 값을 갖지만, <strong>i18n</strong> 라우팅을 위해 다르게 지정해야 하는 경우도 있습니다.</p><h3 id="basepath" tabindex="-1"><code>basePath</code> <a class="header-anchor" href="#basepath" aria-label="Permalink to &quot;\`basePath\`&quot;">​</a></h3><p>이 옵션은 주로 VitePress의 <code>rewrite</code> 규칙으로 작업할 때 사용되며, 그 외에는 선택 사항입니다.</p><p>VitePress에서 <code>base</code> 경로의 값을 대체합니다. 이 값을 지정하지 않으면 <code>resolvePath</code> 값 또는 루트 경로(<code>/</code>)가 지정됩니다.</p><p>디렉토리의 실제 경로가 URI의 경로 구조와 다른 경우 다시 쓰기를 통해 제공된 페이지로 이동할 수 있어야 합니다. 일반적으로 사이드바는 루트 디렉터리를 기반으로 경로를 생성하며 VitePress의 다시 쓰기 경로를 참조하지 않습니다.</p><p>예를 들어 다음과 같은 재작성 규칙이 있다고 가정해 보겠습니다:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> vitePressConfigs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  rewrites: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;guide/:page&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;help/:page&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> vitePressSidebarConfigs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    documentRootPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;docs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    scanStartPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;guide&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    resolvePath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/guide/&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withSidebar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vitePressConfigs, vitePressSidebarConfigs));</span></span></code></pre></div><p><code>guide/one.md</code> 문서가 <code>help/one</code> 경로에 표시됩니다. 그러나 이렇게 하면 사이드바가 경로인 <code>help/one</code>을 그대로 찾으려고 하기 때문에 메뉴가 표시되지 않습니다.</p><p>이 문제를 해결하려면 <code>basePath</code>의 경로를 <code>help</code>로 변경하세요:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> vitePressConfigs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  rewrites: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;guide/:page&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;help/:page&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> vitePressSidebarConfigs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    documentRootPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;docs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    scanStartPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;guide&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    basePath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;help&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &lt;---------------------- 이 라인을 추가합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    resolvePath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/guide/&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withSidebar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vitePressConfigs, vitePressSidebarConfigs));</span></span></code></pre></div><h2 id="복잡한-경로-및-uri가-있는-메뉴-표시하기" tabindex="-1">복잡한 경로 및 URI가 있는 메뉴 표시하기 <a class="header-anchor" href="#복잡한-경로-및-uri가-있는-메뉴-표시하기" aria-label="Permalink to &quot;복잡한 경로 및 URI가 있는 메뉴 표시하기&quot;">​</a></h2><p>위의 예는 일반적으로 경로가 단계로 정의된 경우이지만, 단계가 깊은 폴더를 표시하려는 경우, 특히 URI가 더 짧거나 실제 폴더 경로와 다른 규칙을 사용하는 경우에는 추가 방법을 사용해야 합니다. 예를 들어 다음과 같은 폴더 구조가 있습니다:</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docs/</span></span>
<span class="line"><span>├─ guide/</span></span>
<span class="line"><span>│  ├─ api/</span></span>
<span class="line"><span>│  │  ├─ api-one.md</span></span>
<span class="line"><span>│  │  └─ api-two.md</span></span>
<span class="line"><span>│  ├─ one.md</span></span>
<span class="line"><span>│  └─ two.md</span></span>
<span class="line"><span>└─ config/</span></span>
<span class="line"><span>   ├─ index.md</span></span>
<span class="line"><span>   ├─ three.md</span></span>
<span class="line"><span>   └─ four.md</span></span></code></pre></div><p>이번에는 <code>/api</code>라는 한 단계 URI에 도달했을 때 <code>docs/guide/api</code>의 메뉴를 표시하고 싶습니다. 예상되는 메뉴는 <code>api-one.md</code>와 <code>api-two.md</code>만 표시하는 것입니다.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withSidebar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    documentRootPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;docs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    scanStartPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;guide/api&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    resolvePath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/api/&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre></div><p>하지만 이렇게 옵션을 구성하면 <code>api</code> 디렉터리가 <code>guide</code>의 하위 디렉터리이기 때문에 메뉴를 표시할 수 없습니다. <strong>VitePress</strong>는 이를 감지하지 못하고 존재하지 않는 문서로 이동합니다.</p><p>이를 해결하려면 <strong>VitePress</strong>의 라우팅 기능을 병행해서 사용해야 합니다. 관련 내용은 아래 글을 참고하세요:</p><p><a href="https://vitepress.dev/ko/guide/routing#route-rewrites" target="_blank" rel="noreferrer">https://vitepress.dev/ko/guide/routing#route-rewrites</a></p><p>위의 예에 따라 <code>defineConfig</code>의 VitePress 설정에 <code>rewrites</code> 옵션을 추가합니다:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> vitePressConfigs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* [START] Add This */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  rewrites: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;guide/api/:page&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;api/:page&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* [END] Add This */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> vitePressSidebarConfigs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  documentRootPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;docs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  scanStartPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;guide/api&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  resolvePath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/api/&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withSidebar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vitePressConfigs, vitePressSidebarConfigs));</span></span></code></pre></div><p>이제 URI 경로가 <code>/api</code>로 시작하면 <code>docs/guide/api</code>의 하위 메뉴가 표시됩니다!</p>`,47)]))}const o=a(e,[["render",l]]);export{c as __pageData,o as default};

import{_ as i,a as e}from"./chunks/doc-multi-level-docs-after.BybuXf3W.js";import{_ as a,c as t,o as n,ag as l}from"./chunks/framework.Bw-5EFTY.js";const E=JSON.parse('{"title":"Multi-level-sidebar with indents","description":"","frontmatter":{},"headers":[],"relativePath":"advanced-usage/multi-level-sidebar-with-indents.md","filePath":"en/advanced-usage/multi-level-sidebar-with-indents.md","lastUpdated":1724371989000}'),p={name:"advanced-usage/multi-level-sidebar-with-indents.md"};function h(d,s,r,o,k,c){return n(),t("div",null,s[0]||(s[0]=[l('<h1 id="multi-level-sidebar-with-indents" tabindex="-1">Multi-level-sidebar with indents <a class="header-anchor" href="#multi-level-sidebar-with-indents" aria-label="Permalink to &quot;Multi-level-sidebar with indents&quot;">​</a></h1><p>In a multi-level sidebar, the menu is displayed with indentation for each tier. However, VitePress starts indenting from the second tier by default. For example:</p><p><img src="'+i+`" alt="Multi level docs before"></p><p>Above, <code>directory-level-2</code> is a subfile of <code>directory-level-1</code>, but it appears to be in the same hierarchy.</p><p>This is not an issue with VitePress Sidebar, so to fix it, you&#39;ll need to customize the styling of your existing theme via <strong><a href="https://vitepress.dev/guide/extending-default-theme#customizing-css" target="_blank" rel="noreferrer">VitePress&#39; Custom CSS</a></strong>.</p><p>Create a <code>theme</code> directory in the <code>.vitepress</code> directory to override the styles required by the existing styles. Then, inside the <code>theme</code> directory, create an <code>index.js</code> file (If you&#39;re using Typescript, use <code>index.ts</code> instead of <code>index.js</code>) and a <code>custom.css</code> file.</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/</span></span>
<span class="line"><span>├─ package.json</span></span>
<span class="line"><span>├─ src/</span></span>
<span class="line"><span>├─ docs/</span></span>
<span class="line"><span>│  ├─ .vitepress/</span></span>
<span class="line"><span>│  │  └─ theme/            &lt;------------ Add this</span></span>
<span class="line"><span>│  │     ├─ custom.css     &lt;------------ Add this</span></span>
<span class="line"><span>│  │     └─ index.js       &lt;------------ Add this</span></span>
<span class="line"><span>│  ├─ example.md</span></span>
<span class="line"><span>│  └─ index.md</span></span>
<span class="line"><span>└─ ...</span></span></code></pre></div><p>Then add the following to the <code>index.js</code> file:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DefaultTheme </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitepress/theme&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./custom.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DefaultTheme;</span></span></code></pre></div><p>Next, add the following to the <code>custom.css</code> file:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.group:has</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">role</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;button&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.VPSidebarItem.level-0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> .items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !important</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--vp-c-divider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: background-color </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.25</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Now start the VitePress server. This will make it easier to see the hierarchy of the first level of the group where the child content exists.</p><p><img src="`+e+'" alt="Multi level docs before"></p><p>It&#39;s important to note that the vertical divider you see here was only created with CSS; it should have been created as a <code>div</code> with a CSS class called <code>indicator</code>, so you should be aware that the vertical divider may not be selected when you build dynamic pages in the future.</p>',14)]))}const u=a(p,[["render",h]]);export{E as __pageData,u as default};

import{_ as i,a}from"./chunks/doc-multi-level-docs-after.BybuXf3W.js";import{_ as e,c as n,o as t,ag as p}from"./chunks/framework.Bw-5EFTY.js";const y=JSON.parse('{"title":"带缩进的多级侧边栏","description":"","frontmatter":{},"headers":[],"relativePath":"zhHans/advanced-usage/multi-level-sidebar-with-indents.md","filePath":"zhHans/advanced-usage/multi-level-sidebar-with-indents.md","lastUpdated":1753152382000}'),l={name:"zhHans/advanced-usage/multi-level-sidebar-with-indents.md"};function h(d,s,k,r,c,o){return t(),n("div",null,s[0]||(s[0]=[p('<h1 id="带缩进的多级侧边栏" tabindex="-1">带缩进的多级侧边栏 <a class="header-anchor" href="#带缩进的多级侧边栏" aria-label="Permalink to &quot;带缩进的多级侧边栏&quot;">​</a></h1><p>在多层侧边栏中，菜单显示时每层都会缩进。不过，VitePress 默认从第二层开始缩进。例如</p><p><img src="'+i+`" alt="Multi level docs before"></p><p>上面,<code>directory-level-2</code>是<code>directory-level-1</code>的子文件,但看起来处于相同的层级。</p><p>这不是VitePress侧边栏的问题,要解决这个问题,您需要通过**<a href="https://vitepress.dev/zh/guide/extending-default-theme#customizing-css" target="_blank" rel="noreferrer">VitePress的自定义CSS</a>**自定义现有主题的样式。</p><p>在<code>.vitepress</code>目录下创建一个<code>theme</code>目录,以覆盖现有样式所需的样式。然后在<code>theme</code>目录下创建一个<code>index.js</code>文件(如果您使用的是Typescript,请使用<code>index.ts</code>而不是<code>index.js</code>)和一个<code>custom.css</code>文件。</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/</span></span>
<span class="line"><span>├─ package.json</span></span>
<span class="line"><span>├─ src/</span></span>
<span class="line"><span>├─ docs/</span></span>
<span class="line"><span>│  ├─ .vitepress/</span></span>
<span class="line"><span>│  │  └─ theme/            &lt;------------ Add this</span></span>
<span class="line"><span>│  │     ├─ custom.css     &lt;------------ Add this</span></span>
<span class="line"><span>│  │     └─ index.js       &lt;------------ Add this</span></span>
<span class="line"><span>│  ├─ example.md</span></span>
<span class="line"><span>│  └─ index.md</span></span>
<span class="line"><span>└─ ...</span></span></code></pre></div><p>然后在 <code>index.js</code> 文件中添加以下内容：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DefaultTheme </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitepress/theme&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./custom.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DefaultTheme;</span></span></code></pre></div><p>接下来，在 <code>custom.css</code> 文件中添加以下内容：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.group:has</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">role</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;button&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.VPSidebarItem.level-0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> .items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !important</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--vp-c-divider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: background-color </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.25</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>现在启动 VitePress 服务器。这样就能更容易地看到子内容所在组的第一级层次结构。</p><p><img src="`+a+'" alt="Multi level docs before"></p><p>需要注意的是,这里看到的垂直分隔线只是用CSS创建的;它应该创建为一个带有CSS类名为<code>indicator</code>的<code>div</code>,所以你应该知道,当你以后创建动态页面时,垂直分隔线可能不会被选中。</p>',14)]))}const F=e(l,[["render",h]]);export{y as __pageData,F as default};
